"""update database structure for results

Revision ID: 30fcc8a0697d
Revises: 53b56f8d89cd
Create Date: 2024-08-30 10:23:33.643922

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '30fcc8a0697d'
down_revision: Union[str, None] = '53b56f8d89cd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('mobility_result_sub',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mobility_result_id', sa.Integer(), nullable=False),
    sa.Column('sub_objective_id', sa.Integer(), nullable=True),
    sa.Column('target', sa.Boolean(), nullable=False),
    sa.Column('impact', sa.Integer(), nullable=True),
    sa.Column('spatial_impact', sa.Enum('locally', 'districtwide', 'citywide', native_enum=False), nullable=True),
    sa.Column('annotation', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['mobility_result_id'], ['mobility_result.id'], ),
    sa.ForeignKeyConstraint(['sub_objective_id'], ['sub_objective.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mobility_result_sub_id'), 'mobility_result_sub', ['id'], unique=True)
    op.drop_constraint('mobility_result_sub_objective_id_fkey', 'mobility_result', type_='foreignkey')
    op.alter_column('mobility_result', 'main_objective_bool', new_column_name='target', nullable=False)
    op.drop_column('mobility_result', 'sub_objective_bool')
    op.drop_column('mobility_result', 'spatial_impact')
    op.drop_column('mobility_result', 'impact')
    op.drop_column('mobility_result', 'sub_objective_id')
    op.drop_column('mobility_result', 'annotation')
    op.add_column('mobility_result_indicators', sa.Column('mobility_result_sub_id', sa.Integer(), nullable=True))
    op.drop_constraint('mobility_result_indicators_mobility_results_id_fkey', 'mobility_result_indicators', type_='foreignkey')
    op.create_foreign_key(None, 'mobility_result_indicators', 'mobility_result_sub', ['mobility_result_sub_id'], ['id'])
    op.drop_column('mobility_result_indicators', 'mobility_results_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('mobility_result_indicators', sa.Column('mobility_results_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'mobility_result_indicators', type_='foreignkey')
    op.create_foreign_key('mobility_result_indicators_mobility_results_id_fkey', 'mobility_result_indicators', 'mobility_result', ['mobility_results_id'], ['id'])
    op.drop_column('mobility_result_indicators', 'mobility_result_sub_id')
    op.add_column('mobility_result', sa.Column('annotation', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('mobility_result', sa.Column('sub_objective_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('mobility_result', sa.Column('impact', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('mobility_result', sa.Column('spatial_impact', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('mobility_result', 'target', new_column_name='main_objective_bool', nullable=True)
    op.add_column('mobility_result', sa.Column('sub_objective_bool', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.create_foreign_key('mobility_result_sub_objective_id_fkey', 'mobility_result', 'sub_objective', ['sub_objective_id'], ['id'])
    op.drop_index(op.f('ix_mobility_result_sub_id'), table_name='mobility_result_sub')
    op.drop_table('mobility_result_sub')
    # ### end Alembic commands ###
