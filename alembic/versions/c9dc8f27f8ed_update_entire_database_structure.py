"""update entire database structure

Revision ID: c9dc8f27f8ed
Revises: 79578ae70596
Create Date: 2024-08-28 16:37:40.859824

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c9dc8f27f8ed'
down_revision: Union[str, None] = '79578ae70596'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('indicator',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indicator_id'), 'indicator', ['id'], unique=True)
    op.create_table('key_target',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('no', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_key_target_id'), 'key_target', ['id'], unique=True)
    op.create_table('mobility_submission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author', sa.String(), nullable=False),
    sa.Column('submission_no', sa.Integer(), nullable=False),
    sa.Column('submission_date', sa.Date(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('desc', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mobility_submission_id'), 'mobility_submission', ['id'], unique=True)
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tag_id'), 'tag', ['id'], unique=True)
    op.create_table('text_block',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_text_block_id'), 'text_block', ['id'], unique=True)
    op.create_table('indicator_tag',
    sa.Column('indicator_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['indicator_id'], ['indicator.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
    )
    op.create_table('sub_target',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('no', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('key_target_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['key_target_id'], ['key_target.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sub_target_id'), 'sub_target', ['id'], unique=True)
    op.create_table('text_block_tag',
    sa.Column('text_block_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.ForeignKeyConstraint(['text_block_id'], ['text_block.id'], )
    )
    op.create_table('mobility_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('key_target_id', sa.Integer(), nullable=True),
    sa.Column('key_target_bool', sa.Boolean(), nullable=True),
    sa.Column('sub_target_id', sa.Integer(), nullable=True),
    sa.Column('sub_target_bool', sa.Boolean(), nullable=True),
    sa.Column('impact', sa.Integer(), nullable=True),
    sa.Column('spatial_impact', sa.String(), nullable=True),
    sa.Column('annotation', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['key_target_id'], ['key_target.id'], ),
    sa.ForeignKeyConstraint(['sub_target_id'], ['sub_target.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['mobility_submission.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mobility_result_id'), 'mobility_result', ['id'], unique=True)
    op.create_table('mobility_result_indicators',
    sa.Column('indicator_id', sa.Integer(), nullable=True),
    sa.Column('mobility_results_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['indicator_id'], ['indicator.id'], ),
    sa.ForeignKeyConstraint(['mobility_results_id'], ['mobility_result.id'], )
    )
    op.drop_table('indicators_tags')
    op.drop_table('text_blocks_tags')
    op.drop_table('tags')
    op.drop_table('indicators')
    op.drop_table('sub_targets')
    op.drop_table('key_targets')
    op.drop_table('text_blocks')
    op.drop_table('submissions')

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('text_blocks_tags',
    sa.Column('text_blocks_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tags_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tags_id'], ['tags.id'], name='text_blocks_tags_tags_id_fkey'),
    sa.ForeignKeyConstraint(['text_blocks_id'], ['text_blocks.id'], name='text_blocks_tags_text_blocks_id_fkey')
    )
    op.create_table('submissions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('author', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('submission_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('submission_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='submissions_pkey')
    )
    op.create_table('text_blocks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='text_blocks_pkey')
    )
    op.create_table('indicators_tags',
    sa.Column('indicators_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tags_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['indicators_id'], ['indicators.id'], name='indicators_tags_indicators_id_fkey'),
    sa.ForeignKeyConstraint(['tags_id'], ['tags.id'], name='indicators_tags_tags_id_fkey')
    )
    op.create_table('sub_targets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('key_target_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['key_target_id'], ['key_targets.id'], name='sub_targets_key_target_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sub_targets_pkey')
    )
    op.create_table('key_targets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='key_targets_pkey')
    )
    op.create_table('indicators',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='indicators_pkey')
    )
    op.create_table('tags',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='tags_pkey')
    )
    op.drop_table('mobility_result_indicators')
    op.drop_index(op.f('ix_mobility_result_id'), table_name='mobility_result')
    op.drop_table('mobility_result')
    op.drop_table('text_block_tag')
    op.drop_index(op.f('ix_sub_target_id'), table_name='sub_target')
    op.drop_table('sub_target')
    op.drop_table('indicator_tag')
    op.drop_index(op.f('ix_text_block_id'), table_name='text_block')
    op.drop_table('text_block')
    op.drop_index(op.f('ix_tag_id'), table_name='tag')
    op.drop_table('tag')
    op.drop_index(op.f('ix_mobility_submission_id'), table_name='mobility_submission')
    op.drop_table('mobility_submission')
    op.drop_index(op.f('ix_key_target_id'), table_name='key_target')
    op.drop_table('key_target')
    op.drop_index(op.f('ix_indicator_id'), table_name='indicator')
    op.drop_table('indicator')
    # ### end Alembic commands ###
