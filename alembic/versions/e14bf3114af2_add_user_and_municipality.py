"""add user and municipality

Revision ID: e14bf3114af2
Revises: 3f2a417a19f1
Create Date: 2024-10-23 13:55:08.742043

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e14bf3114af2'
down_revision: Union[str, None] = '3f2a417a19f1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('municipality',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_municipality_id'), 'municipality', ['id'], unique=True)

    # Insert default municipality record
    op.execute("INSERT INTO municipality (id, name) VALUES (1, 'Oberursel (Taunus)')")



    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('confirmed', sa.Boolean(), nullable=False),
    sa.Column('municipality_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['municipality_id'], ['municipality.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.add_column('climate_submission', sa.Column('municipality_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'climate_submission', 'municipality', ['municipality_id'], ['id'])
    op.add_column('indicator', sa.Column('municipality_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'indicator', 'municipality', ['municipality_id'], ['id'])
    op.add_column('main_objective', sa.Column('municipality_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'main_objective', 'municipality', ['municipality_id'], ['id'])
    op.add_column('mobility_result', sa.Column('municipality_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'mobility_result', 'municipality', ['municipality_id'], ['id'])
    op.add_column('mobility_submission', sa.Column('municipality_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'mobility_submission', 'municipality', ['municipality_id'], ['id'])
    op.add_column('mobility_subresult', sa.Column('municipality_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'mobility_subresult', 'municipality', ['municipality_id'], ['id'])
    op.add_column('sub_objective', sa.Column('municipality_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'sub_objective', 'municipality', ['municipality_id'], ['id'])
    op.add_column('tag', sa.Column('municipality_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'tag', 'municipality', ['municipality_id'], ['id'])
    op.add_column('text_block', sa.Column('municipality_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'text_block', 'municipality', ['municipality_id'], ['id'])

    # Add municipality_id to other tables, initially nullable
    tables = [
        'climate_submission', 'indicator', 'main_objective', 'mobility_result',
        'mobility_submission', 'mobility_subresult', 'sub_objective', 'tag', 'text_block'
    ]

        # Update existing records to use default municipality
    for table in tables:
        op.execute(f"UPDATE {table} SET municipality_id = 1 WHERE municipality_id IS NULL")

    # Make municipality_id columns not nullable
    for table in tables:
        op.alter_column(table, 'municipality_id', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'text_block', type_='foreignkey')
    op.drop_column('text_block', 'municipality_id')
    op.drop_constraint(None, 'tag', type_='foreignkey')
    op.drop_column('tag', 'municipality_id')
    op.drop_constraint(None, 'sub_objective', type_='foreignkey')
    op.drop_column('sub_objective', 'municipality_id')
    op.drop_constraint(None, 'mobility_subresult', type_='foreignkey')
    op.drop_column('mobility_subresult', 'municipality_id')
    op.drop_constraint(None, 'mobility_submission', type_='foreignkey')
    op.drop_column('mobility_submission', 'municipality_id')
    op.drop_constraint(None, 'mobility_result', type_='foreignkey')
    op.drop_column('mobility_result', 'municipality_id')
    op.drop_constraint(None, 'main_objective', type_='foreignkey')
    op.drop_column('main_objective', 'municipality_id')
    op.drop_constraint(None, 'indicator', type_='foreignkey')
    op.drop_column('indicator', 'municipality_id')
    op.drop_constraint(None, 'climate_submission', type_='foreignkey')
    op.drop_column('climate_submission', 'municipality_id')
    op.drop_table('user')
    op.drop_index(op.f('ix_municipality_id'), table_name='municipality')
    op.drop_table('municipality')
    # ### end Alembic commands ###
