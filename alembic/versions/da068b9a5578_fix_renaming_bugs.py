"""fix renaming bugs

Revision ID: da068b9a5578
Revises: a4d72d610e5a
Create Date: 2025-07-03 16:08:01.337423

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "da068b9a5578"
down_revision: Union[str, None] = "a4d72d610e5a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.rename_table(
        "mobilitaetscheckEingabe_indikator",
        "mobilitaetscheckEingabeZielUnter_indikator",
    )
    op.alter_column(
        "gemeinde",
        "id",
        existing_type=sa.INTEGER(),
        comment="Gemeinde ID",
        existing_comment="Municipality ID",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('municipality_id_seq'::regclass)"),
    )
    op.alter_column(
        "gemeinde",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Name der Gemeinde oder Stadt",
        existing_comment="Name of the municipality.",
        existing_nullable=False,
    )
    op.alter_column(
        "indikator",
        "id",
        existing_type=sa.INTEGER(),
        comment="Indikator ID",
        existing_comment="Indicator ID",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('indicator_id_seq'::regclass)"),
    )
    op.alter_column(
        "indikator",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Name des Indikators",
        existing_comment="Label or name of the indicator.",
        existing_nullable=False,
    )
    op.alter_column(
        "indikator",
        "quelle_url",
        existing_type=sa.VARCHAR(),
        comment="URL zur Quelle des Indikators",
        existing_comment="URL to the source of the indicator.",
        existing_nullable=True,
    )
    op.alter_column(
        "indikator",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="Gemeinde ID, mit der der Indikator verknüpft ist.",
        existing_comment="Municipality ID by which the indicator is associated.",
        existing_nullable=False,
    )
    op.alter_column(
        "indikator",
        "erstellt_von",
        existing_type=sa.UUID(),
        comment="User ID des Erstellers des Indikators",
        existing_comment="User ID of the creator of the indicator.",
        existing_nullable=True,
    )
    op.alter_column(
        "indikator",
        "zuletzt_bearbeitet_von",
        existing_type=sa.UUID(),
        comment="User ID des zuletzt bearbeitenden Benutzers",
        existing_comment="User ID of the last editor.",
        existing_nullable=True,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "id",
        existing_type=sa.INTEGER(),
        comment="Klimacheck ID",
        existing_comment="Submission ID",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "verwaltungsvorgang_nr",
        existing_type=sa.VARCHAR(),
        comment="Verwaltungsvorgangsnummer",
        existing_comment="Internal tracking number assigned by the administration.",
        existing_nullable=False,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "verwaltungsvorgang_datum",
        existing_type=sa.DATE(),
        comment="Datum des Verwaltungsvorgangs",
        existing_comment="Date the submission was registered by the administration.",
        existing_nullable=False,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Name oder Titel des Klimachecks",
        existing_comment="Short descriptive title or label for the submission.",
        existing_nullable=False,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "klimarelevanz",
        existing_type=sa.VARCHAR(),
        comment="Einschätzung der Klimarelevanz des Projekts (z.B. hoch, mittel, niedrig).",
        existing_comment="Estimated impact on climate (e.g., positive, negative, no effect).",
        existing_nullable=False,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "auswirkung_thg",
        existing_type=sa.INTEGER(),
        comment="Art und Umfang der Auswirkungen der THG-Emissionen",
        existing_comment="Estimated impact on greenhouse gas emissions on a scale from -3 to 3.",
        existing_nullable=True,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "auswirkung_klimaanpassung",
        existing_type=sa.INTEGER(),
        comment="Art und Umfang der Auswirkungen der Klimaanpassung",
        existing_comment="Estimated impact on climate adaptation on a scale from -3 to 3.",
        existing_nullable=True,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "auswirkung_beschreibung",
        existing_type=sa.VARCHAR(),
        comment="Kurzbeschreibung der Auswirkungen",
        existing_comment="Detailed description of the estimated impact on climate.",
        existing_nullable=True,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "auswirkung_dauer",
        existing_type=sa.VARCHAR(),
        comment="Kurzbeschreibung der Dauer der Auswirkungen",
        existing_comment="Estimated duration of the impact (e.g., short, medium, long).",
        existing_nullable=True,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "erstellt_am",
        existing_type=postgresql.TIMESTAMP(),
        comment="Zeitpunkt der Erstellung des Klimachecks",
        existing_comment="Date and time the submission was created.",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "klimacheck_eingabe",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="ID der Gemeinde, mit der der Klimacheck verknüpft ist.",
        existing_comment="ID of the municipality that submitted the project.",
        existing_nullable=False,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "erstellt_von",
        existing_type=sa.UUID(),
        comment="User ID vom Ersteller des Klimachecks",
        existing_comment="ID of the user who created the submission.",
        existing_nullable=True,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "zuletzt_bearbeiter_von",
        existing_type=sa.UUID(),
        comment="User ID des zuletzt bearbeitenden Benutzers",
        existing_comment="ID of the user who last edited the submission.",
        existing_nullable=True,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "veroeffentlicht",
        existing_type=sa.BOOLEAN(),
        comment="Markiert, ob der Klimacheck veröffentlicht ist oder nicht",
        existing_comment="Flag indicating whether the submission is published.",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "id",
        existing_type=sa.INTEGER(),
        comment="ID der Mobilitätscheck-Eingabe",
        existing_comment="Mobility Submission ID",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text(
            "nextval('mobility_submission_id_seq'::regclass)"
        ),
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "verwaltungsvorgang_nr",
        existing_type=sa.VARCHAR(),
        comment="Verwaltungsvorgangsnummer",
        existing_comment="Internal tracking number assigned by the administration.",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "verwaltungsvorgang_datum",
        existing_type=sa.DATE(),
        comment="Datum des Verwaltungsvorgangs",
        existing_comment="Date the submission was registered by the administration.",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Name oder Titel der Mobilitätschecks",
        existing_comment="Short descriptive title or label for the submission.",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "beschreibung",
        existing_type=sa.VARCHAR(),
        comment="Beschreibung der Mobilitätschecks",
        existing_comment="Description of the submission.",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "erstellt_am",
        existing_type=postgresql.TIMESTAMP(),
        comment="Zeitpunkt der Erstellung",
        existing_comment="Date of creation.",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="Gemeinde ID, mit der die Mobilitätscheck-Eingabe verknüpft ist",
        existing_comment="Municipality ID by which the mobility submission is associated.",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "erstellt_von",
        existing_type=sa.UUID(),
        comment="User ID des Erstellers der Mobilitätschecks",
        existing_comment="User ID of the creator of the mobility submission.",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "zuletzt_bearbeitet_von",
        existing_type=sa.UUID(),
        comment="User ID des zuletzt bearbeitenden Benutzers",
        existing_comment="User ID of the last editor.",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "veroeffentlicht",
        existing_type=sa.BOOLEAN(),
        comment="Markiert, ob die Eingabe veröffentlicht ist oder nicht",
        existing_comment="Is the submission published or not",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_ober",
        "id",
        existing_type=sa.INTEGER(),
        comment="ID der Eingabe des Mobilitätschecks für das Oberziel",
        existing_comment="Mobility result ID",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('mobility_result_id_seq'::regclass)"),
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_ober",
        "mobilitaetscheck_eingabe_id",
        existing_type=sa.INTEGER(),
        comment="Eingabe ID des Mobilitätschecks, mit der das Oberziel verknüpft ist",
        existing_comment="Submission ID by which the mobility result is associated.",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_ober",
        "mobilitaetscheck_ziel_ober_id",
        existing_type=sa.INTEGER(),
        comment="ID des Leitziels, mit dem die Eingabe verknüpft ist",
        existing_comment="Main objective ID by which the mobility result is associated",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_ober",
        "tangiert",
        existing_type=sa.BOOLEAN(),
        comment="Markiert, ob das Oberziel tangiert ist",
        existing_comment="Main Objective is targeted or not",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_unter",
        "id",
        existing_type=sa.INTEGER(),
        comment="ID der Mobilitätscheck Eingabe Unterziels",
        existing_comment="Mobility Subresult ID",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_unter",
        "eingabe_ziel_ober_id",
        existing_type=sa.INTEGER(),
        comment="ID der Mobilitätscheck Eingabe Oberziels, mit dem das Unterziel verknüpft ist",
        existing_comment="Associated Mobility Result ID",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_unter",
        "ziel_unter_id",
        existing_type=sa.INTEGER(),
        comment="ID des Mobilitätscheck Unterziels, mit dem die Eingabe verknüpft ist",
        existing_comment="Sub Objective ID by which the mobility subresult is associated",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_unter",
        "tangiert",
        existing_type=sa.BOOLEAN(),
        comment="Markiert, ob das Unterziel tangiert ist",
        existing_comment="Sub Objective is targeted or not",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_unter",
        "auswirkung",
        existing_type=sa.INTEGER(),
        comment="Auswirkung des Unterziels",
        existing_comment="Impact on the sub objective on a scale from -3 to 3",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_unter",
        "auswirkung_raeumlich",
        existing_type=postgresql.ENUM(
            "locally", "districtwide", "citywide", name="spatialimpactenum"
        ),
        type_=sa.String(),
        comment="Räumliche Auswirkung des Unterziels",
        existing_comment="Spatial impact of the sub objective (e.g. locally, districtwide, citywide)",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_unter",
        "anmerkung",
        existing_type=sa.VARCHAR(),
        comment="Anmerkung zum Unterziel",
        existing_comment="Annotation for the sub objective",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_ober",
        "id",
        existing_type=sa.INTEGER(),
        comment="ID des Oberziels für den Mobilitätscheck",
        existing_comment="Main objective ID",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('key_target_id_seq'::regclass)"),
    )
    op.alter_column(
        "mobilitaetscheck_ziel_ober",
        "nr",
        existing_type=sa.INTEGER(),
        comment="Nummerierung des Oberziels",
        existing_comment="Main objective number",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_ober",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Name oder Bezeichnung des Oberziels",
        existing_comment="Lable or name of Main objective",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_ober",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="Gemeinde ID mit der das Oberziel verknüpft ist",
        existing_comment="Municipality ID by which the main objective is associated.",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_ober",
        "erstellt_von",
        existing_type=sa.UUID(),
        comment="User ID des Erstellers des Oberziels",
        existing_comment="User ID of the creator of the main objective.",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_ober",
        "zuletzt_bearbeitet_von",
        existing_type=sa.UUID(),
        comment="User ID des zuletzt bearbeitenden Benutzers",
        existing_comment="User ID of the last editor.",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_unter",
        "id",
        existing_type=sa.INTEGER(),
        comment="ID des Unterziels für den Mobilitätscheck",
        existing_comment="Sub objective ID",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('sub_target_id_seq'::regclass)"),
    )
    op.alter_column(
        "mobilitaetscheck_ziel_unter",
        "nr",
        existing_type=sa.INTEGER(),
        comment="Nummerierung des Unterziels",
        existing_comment="Sub objective number",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_unter",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Name oder Bezeichnung des Unterziels",
        existing_comment="Label or name of sub objective",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_unter",
        "ziel_ober_id",
        existing_type=sa.INTEGER(),
        comment="ID des Oberziels, mit dem das Unterziel verknüpft ist",
        existing_comment="Main objective ID associated with the sub objective",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_unter",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="Gemeinde ID, mit der das Unterziel verknüpft ist",
        existing_comment="Municipality ID by which the sub objective is associated.",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_unter",
        "erstellt_von",
        existing_type=sa.UUID(),
        comment="User ID des Erstellers des Unterziels",
        existing_comment="User ID of the creator of the sub objective.",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_unter",
        "zuletzt_bearbeitet_von",
        existing_type=sa.UUID(),
        comment="User ID des zuletzt bearbeitenden Benutzers",
        existing_comment="User ID of the last editor.",
        existing_nullable=True,
    )
    op.alter_column(
        "tag",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Name des Tags",
        existing_comment="Label or name of the tag",
        existing_nullable=False,
    )
    op.alter_column(
        "tag",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="Gemeinde ID mit der der Tag verknüpft ist",
        existing_comment="Municipality ID by which the tag is associated.",
        existing_nullable=False,
    )
    op.alter_column(
        "tag",
        "erstellt_von",
        existing_type=sa.UUID(),
        comment="User ID des Erstellers des Tags",
        existing_comment="User ID of the creator of the tag.",
        existing_nullable=True,
    )
    op.alter_column(
        "tag",
        "zuletzt_bearbeitet_von",
        existing_type=sa.UUID(),
        comment="User ID des zuletzt bearbeitenden Benutzers",
        existing_comment="User ID of the last editor.",
        existing_nullable=True,
    )
    op.alter_column(
        "textblock",
        "id",
        existing_type=sa.INTEGER(),
        comment="Textblock ID",
        existing_comment="Text block ID",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('text_block_id_seq'::regclass)"),
    )
    op.alter_column(
        "textblock",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Name des Textblocks",
        existing_comment="Label or name of the text block.",
        existing_nullable=False,
    )
    op.alter_column(
        "textblock",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="Gemeinde ID, mit der der Textblock verknüpft ist",
        existing_comment="Municipality ID by which the text block is associated.",
        existing_nullable=False,
    )
    op.alter_column(
        "textblock",
        "erstellt_von",
        existing_type=sa.UUID(),
        comment="User ID des Erstellers des Textblocks",
        existing_comment="User ID of the creator of the text block.",
        existing_nullable=True,
    )
    op.alter_column(
        "textblock",
        "zuletzt_bearbeitet_von",
        existing_type=sa.UUID(),
        comment="User ID des zuletzt bearbeitenden Benutzers",
        existing_comment="User ID of the last editor.",
        existing_nullable=True,
    )
    op.alter_column(
        "user",
        "vorname",
        existing_type=sa.VARCHAR(),
        comment="Vorname des Benutzers",
        existing_comment="First name of the user.",
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "nachname",
        existing_type=sa.VARCHAR(),
        comment="Nachname des Benutzers",
        existing_comment="Last name of the user.",
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "rolle",
        existing_type=sa.VARCHAR(),
        comment="Rolle des Benutzers",
        existing_comment="Role of the user.",
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="Gemeinde ID, mit der der Benutzer verknüpft ist",
        existing_comment="Municipality ID by which the user is associated.",
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "erstellt_am",
        existing_type=postgresql.TIMESTAMP(),
        comment="Zeitpunkt der Erstellung des Benutzers",
        existing_comment="Date of creation.",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user",
        "erstellt_am",
        existing_type=postgresql.TIMESTAMP(),
        comment="Date of creation.",
        existing_comment="Zeitpunkt der Erstellung des Benutzers",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "user",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="Municipality ID by which the user is associated.",
        existing_comment="Gemeinde ID, mit der der Benutzer verknüpft ist",
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "rolle",
        existing_type=sa.VARCHAR(),
        comment="Role of the user.",
        existing_comment="Rolle des Benutzers",
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "nachname",
        existing_type=sa.VARCHAR(),
        comment="Last name of the user.",
        existing_comment="Nachname des Benutzers",
        existing_nullable=False,
    )
    op.alter_column(
        "user",
        "vorname",
        existing_type=sa.VARCHAR(),
        comment="First name of the user.",
        existing_comment="Vorname des Benutzers",
        existing_nullable=False,
    )
    op.alter_column(
        "textblock",
        "zuletzt_bearbeitet_von",
        existing_type=sa.UUID(),
        comment="User ID of the last editor.",
        existing_comment="User ID des zuletzt bearbeitenden Benutzers",
        existing_nullable=True,
    )
    op.alter_column(
        "textblock",
        "erstellt_von",
        existing_type=sa.UUID(),
        comment="User ID of the creator of the text block.",
        existing_comment="User ID des Erstellers des Textblocks",
        existing_nullable=True,
    )
    op.alter_column(
        "textblock",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="Municipality ID by which the text block is associated.",
        existing_comment="Gemeinde ID, mit der der Textblock verknüpft ist",
        existing_nullable=False,
    )
    op.alter_column(
        "textblock",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Label or name of the text block.",
        existing_comment="Name des Textblocks",
        existing_nullable=False,
    )
    op.alter_column(
        "textblock",
        "id",
        existing_type=sa.INTEGER(),
        comment="Text block ID",
        existing_comment="Textblock ID",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('text_block_id_seq'::regclass)"),
    )
    op.alter_column(
        "tag",
        "zuletzt_bearbeitet_von",
        existing_type=sa.UUID(),
        comment="User ID of the last editor.",
        existing_comment="User ID des zuletzt bearbeitenden Benutzers",
        existing_nullable=True,
    )
    op.alter_column(
        "tag",
        "erstellt_von",
        existing_type=sa.UUID(),
        comment="User ID of the creator of the tag.",
        existing_comment="User ID des Erstellers des Tags",
        existing_nullable=True,
    )
    op.alter_column(
        "tag",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="Municipality ID by which the tag is associated.",
        existing_comment="Gemeinde ID mit der der Tag verknüpft ist",
        existing_nullable=False,
    )
    op.alter_column(
        "tag",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Label or name of the tag",
        existing_comment="Name des Tags",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_unter",
        "zuletzt_bearbeitet_von",
        existing_type=sa.UUID(),
        comment="User ID of the last editor.",
        existing_comment="User ID des zuletzt bearbeitenden Benutzers",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_unter",
        "erstellt_von",
        existing_type=sa.UUID(),
        comment="User ID of the creator of the sub objective.",
        existing_comment="User ID des Erstellers des Unterziels",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_unter",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="Municipality ID by which the sub objective is associated.",
        existing_comment="Gemeinde ID, mit der das Unterziel verknüpft ist",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_unter",
        "ziel_ober_id",
        existing_type=sa.INTEGER(),
        comment="Main objective ID associated with the sub objective",
        existing_comment="ID des Oberziels, mit dem das Unterziel verknüpft ist",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_unter",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Label or name of sub objective",
        existing_comment="Name oder Bezeichnung des Unterziels",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_unter",
        "nr",
        existing_type=sa.INTEGER(),
        comment="Sub objective number",
        existing_comment="Nummerierung des Unterziels",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_unter",
        "id",
        existing_type=sa.INTEGER(),
        comment="Sub objective ID",
        existing_comment="ID des Unterziels für den Mobilitätscheck",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('sub_target_id_seq'::regclass)"),
    )
    op.alter_column(
        "mobilitaetscheck_ziel_ober",
        "zuletzt_bearbeitet_von",
        existing_type=sa.UUID(),
        comment="User ID of the last editor.",
        existing_comment="User ID des zuletzt bearbeitenden Benutzers",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_ober",
        "erstellt_von",
        existing_type=sa.UUID(),
        comment="User ID of the creator of the main objective.",
        existing_comment="User ID des Erstellers des Oberziels",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_ober",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="Municipality ID by which the main objective is associated.",
        existing_comment="Gemeinde ID mit der das Oberziel verknüpft ist",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_ober",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Lable or name of Main objective",
        existing_comment="Name oder Bezeichnung des Oberziels",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_ober",
        "nr",
        existing_type=sa.INTEGER(),
        comment="Main objective number",
        existing_comment="Nummerierung des Oberziels",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_ziel_ober",
        "id",
        existing_type=sa.INTEGER(),
        comment="Main objective ID",
        existing_comment="ID des Oberziels für den Mobilitätscheck",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('key_target_id_seq'::regclass)"),
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_unter",
        "anmerkung",
        existing_type=sa.VARCHAR(),
        comment="Annotation for the sub objective",
        existing_comment="Anmerkung zum Unterziel",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_unter",
        "auswirkung_raeumlich",
        existing_type=sa.String(),
        type_=postgresql.ENUM(
            "locally", "districtwide", "citywide", name="spatialimpactenum"
        ),
        comment="Spatial impact of the sub objective (e.g. locally, districtwide, citywide)",
        existing_comment="Räumliche Auswirkung des Unterziels",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_unter",
        "auswirkung",
        existing_type=sa.INTEGER(),
        comment="Impact on the sub objective on a scale from -3 to 3",
        existing_comment="Auswirkung des Unterziels",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_unter",
        "tangiert",
        existing_type=sa.BOOLEAN(),
        comment="Sub Objective is targeted or not",
        existing_comment="Markiert, ob das Unterziel tangiert ist",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_unter",
        "ziel_unter_id",
        existing_type=sa.INTEGER(),
        comment="Sub Objective ID by which the mobility subresult is associated",
        existing_comment="ID des Mobilitätscheck Unterziels, mit dem die Eingabe verknüpft ist",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_unter",
        "eingabe_ziel_ober_id",
        existing_type=sa.INTEGER(),
        comment="Associated Mobility Result ID",
        existing_comment="ID der Mobilitätscheck Eingabe Oberziels, mit dem das Unterziel verknüpft ist",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_unter",
        "id",
        existing_type=sa.INTEGER(),
        comment="Mobility Subresult ID",
        existing_comment="ID der Mobilitätscheck Eingabe Unterziels",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_ober",
        "tangiert",
        existing_type=sa.BOOLEAN(),
        comment="Main Objective is targeted or not",
        existing_comment="Markiert, ob das Oberziel tangiert ist",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_ober",
        "mobilitaetscheck_ziel_ober_id",
        existing_type=sa.INTEGER(),
        comment="Main objective ID by which the mobility result is associated",
        existing_comment="ID des Leitziels, mit dem die Eingabe verknüpft ist",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_ober",
        "mobilitaetscheck_eingabe_id",
        existing_type=sa.INTEGER(),
        comment="Submission ID by which the mobility result is associated.",
        existing_comment="Eingabe ID des Mobilitätschecks, mit der das Oberziel verknüpft ist",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe_ziel_ober",
        "id",
        existing_type=sa.INTEGER(),
        comment="Mobility result ID",
        existing_comment="ID der Eingabe des Mobilitätschecks für das Oberziel",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('mobility_result_id_seq'::regclass)"),
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "veroeffentlicht",
        existing_type=sa.BOOLEAN(),
        comment="Is the submission published or not",
        existing_comment="Markiert, ob die Eingabe veröffentlicht ist oder nicht",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "zuletzt_bearbeitet_von",
        existing_type=sa.UUID(),
        comment="User ID of the last editor.",
        existing_comment="User ID des zuletzt bearbeitenden Benutzers",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "erstellt_von",
        existing_type=sa.UUID(),
        comment="User ID of the creator of the mobility submission.",
        existing_comment="User ID des Erstellers der Mobilitätschecks",
        existing_nullable=True,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="Municipality ID by which the mobility submission is associated.",
        existing_comment="Gemeinde ID, mit der die Mobilitätscheck-Eingabe verknüpft ist",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "erstellt_am",
        existing_type=postgresql.TIMESTAMP(),
        comment="Date of creation.",
        existing_comment="Zeitpunkt der Erstellung",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "beschreibung",
        existing_type=sa.VARCHAR(),
        comment="Description of the submission.",
        existing_comment="Beschreibung der Mobilitätschecks",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Short descriptive title or label for the submission.",
        existing_comment="Name oder Titel der Mobilitätschecks",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "verwaltungsvorgang_datum",
        existing_type=sa.DATE(),
        comment="Date the submission was registered by the administration.",
        existing_comment="Datum des Verwaltungsvorgangs",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "verwaltungsvorgang_nr",
        existing_type=sa.VARCHAR(),
        comment="Internal tracking number assigned by the administration.",
        existing_comment="Verwaltungsvorgangsnummer",
        existing_nullable=False,
    )
    op.alter_column(
        "mobilitaetscheck_eingabe",
        "id",
        existing_type=sa.INTEGER(),
        comment="Mobility Submission ID",
        existing_comment="ID der Mobilitätscheck-Eingabe",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text(
            "nextval('mobility_submission_id_seq'::regclass)"
        ),
    )
    op.alter_column(
        "klimacheck_eingabe",
        "veroeffentlicht",
        existing_type=sa.BOOLEAN(),
        comment="Flag indicating whether the submission is published.",
        existing_comment="Markiert, ob der Klimacheck veröffentlicht ist oder nicht",
        existing_nullable=False,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "zuletzt_bearbeiter_von",
        existing_type=sa.UUID(),
        comment="ID of the user who last edited the submission.",
        existing_comment="User ID des zuletzt bearbeitenden Benutzers",
        existing_nullable=True,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "erstellt_von",
        existing_type=sa.UUID(),
        comment="ID of the user who created the submission.",
        existing_comment="User ID vom Ersteller des Klimachecks",
        existing_nullable=True,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="ID of the municipality that submitted the project.",
        existing_comment="ID der Gemeinde, mit der der Klimacheck verknüpft ist.",
        existing_nullable=False,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "erstellt_am",
        existing_type=postgresql.TIMESTAMP(),
        comment="Date and time the submission was created.",
        existing_comment="Zeitpunkt der Erstellung des Klimachecks",
        existing_nullable=False,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "klimacheck_eingabe",
        "auswirkung_dauer",
        existing_type=sa.VARCHAR(),
        comment="Estimated duration of the impact (e.g., short, medium, long).",
        existing_comment="Kurzbeschreibung der Dauer der Auswirkungen",
        existing_nullable=True,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "auswirkung_beschreibung",
        existing_type=sa.VARCHAR(),
        comment="Detailed description of the estimated impact on climate.",
        existing_comment="Kurzbeschreibung der Auswirkungen",
        existing_nullable=True,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "auswirkung_klimaanpassung",
        existing_type=sa.INTEGER(),
        comment="Estimated impact on climate adaptation on a scale from -3 to 3.",
        existing_comment="Art und Umfang der Auswirkungen der Klimaanpassung",
        existing_nullable=True,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "auswirkung_thg",
        existing_type=sa.INTEGER(),
        comment="Estimated impact on greenhouse gas emissions on a scale from -3 to 3.",
        existing_comment="Art und Umfang der Auswirkungen der THG-Emissionen",
        existing_nullable=True,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "klimarelevanz",
        existing_type=sa.VARCHAR(),
        comment="Estimated impact on climate (e.g., positive, negative, no effect).",
        existing_comment="Einschätzung der Klimarelevanz des Projekts (z.B. hoch, mittel, niedrig).",
        existing_nullable=False,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Short descriptive title or label for the submission.",
        existing_comment="Name oder Titel des Klimachecks",
        existing_nullable=False,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "verwaltungsvorgang_datum",
        existing_type=sa.DATE(),
        comment="Date the submission was registered by the administration.",
        existing_comment="Datum des Verwaltungsvorgangs",
        existing_nullable=False,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "verwaltungsvorgang_nr",
        existing_type=sa.VARCHAR(),
        comment="Internal tracking number assigned by the administration.",
        existing_comment="Verwaltungsvorgangsnummer",
        existing_nullable=False,
    )
    op.alter_column(
        "klimacheck_eingabe",
        "id",
        existing_type=sa.INTEGER(),
        comment="Submission ID",
        existing_comment="Klimacheck ID",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "indikator",
        "zuletzt_bearbeitet_von",
        existing_type=sa.UUID(),
        comment="User ID of the last editor.",
        existing_comment="User ID des zuletzt bearbeitenden Benutzers",
        existing_nullable=True,
    )
    op.alter_column(
        "indikator",
        "erstellt_von",
        existing_type=sa.UUID(),
        comment="User ID of the creator of the indicator.",
        existing_comment="User ID des Erstellers des Indikators",
        existing_nullable=True,
    )
    op.alter_column(
        "indikator",
        "gemeinde_id",
        existing_type=sa.INTEGER(),
        comment="Municipality ID by which the indicator is associated.",
        existing_comment="Gemeinde ID, mit der der Indikator verknüpft ist.",
        existing_nullable=False,
    )
    op.alter_column(
        "indikator",
        "quelle_url",
        existing_type=sa.VARCHAR(),
        comment="URL to the source of the indicator.",
        existing_comment="URL zur Quelle des Indikators",
        existing_nullable=True,
    )
    op.alter_column(
        "indikator",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Label or name of the indicator.",
        existing_comment="Name des Indikators",
        existing_nullable=False,
    )
    op.alter_column(
        "indikator",
        "id",
        existing_type=sa.INTEGER(),
        comment="Indicator ID",
        existing_comment="Indikator ID",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('indicator_id_seq'::regclass)"),
    )
    op.alter_column(
        "gemeinde",
        "name",
        existing_type=sa.VARCHAR(),
        comment="Name of the municipality.",
        existing_comment="Name der Gemeinde oder Stadt",
        existing_nullable=False,
    )
    op.alter_column(
        "gemeinde",
        "id",
        existing_type=sa.INTEGER(),
        comment="Municipality ID",
        existing_comment="Gemeinde ID",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('municipality_id_seq'::regclass)"),
    )
    op.rename_table(
        "mobilitaetscheckEingabeZielUnter_indikator",
        "mobilitaetscheckEingabe_indikator",
    )
    # ### end Alembic commands ###
